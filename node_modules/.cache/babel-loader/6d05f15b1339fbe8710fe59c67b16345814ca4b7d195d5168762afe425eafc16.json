{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0\n};\nconst cartSlices = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          productName: newItem.productName,\n          image: newItem.imgUrl,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity));\n      console.log(state.totalQuantity);\n    }\n  }\n});\nexport const cartActions = cartSlices.actions;\nexport default cartSlices.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","cartSlices","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","productName","image","imgUrl","price","quantity","totalPrice","Number","reduce","total","console","log","cartActions","actions","reducer"],"sources":["C:/Users/Admin/OneDrive/Máy tính/projectTest/shoppingReactNative/src/redux/slices/cartSlices.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  totalAmount: 0,\r\n  totalQuantity: 0,\r\n};\r\n\r\nconst cartSlices = createSlice({\r\n  name: \"card\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (item) => item.id === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          productName: newItem.productName,\r\n          image: newItem.imgUrl,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) + Number(newItem.price);\r\n      }\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity)\r\n      );\r\n      console.log(state.totalQuantity)\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlices.actions;\r\n\r\nexport default cartSlices.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAS,CAACY,IAAI,CACtCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CACjC;MACDP,KAAK,CAACL,aAAa,EAAE;MACrB,IAAI,CAACS,YAAY,EAAE;QACjBJ,KAAK,CAACP,SAAS,CAACe,IAAI,CAAC;UACnBD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,WAAW,EAAEP,OAAO,CAACO,WAAW;UAChCC,KAAK,EAAER,OAAO,CAACS,MAAM;UACrBC,KAAK,EAAEV,OAAO,CAACU,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEZ,OAAO,CAACU;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACS,QAAQ,EAAE;QACvBT,YAAY,CAACU,UAAU,GACrBC,MAAM,CAACX,YAAY,CAACU,UAAU,CAAC,GAAGC,MAAM,CAACb,OAAO,CAACU,KAAK,CAAC;MAC3D;MACAZ,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACP,SAAS,CAACuB,MAAM,CACxC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAGF,MAAM,CAACT,IAAI,CAACM,KAAK,CAAC,GAAGG,MAAM,CAACT,IAAI,CAACO,QAAQ,CAAC,CACpE;MACDK,OAAO,CAACC,GAAG,CAACnB,KAAK,CAACL,aAAa,CAAC;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMyB,WAAW,GAAGxB,UAAU,CAACyB,OAAO;AAE7C,eAAezB,UAAU,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}